# Conclusion

To conclude this project, let's return to the initial question motivating our research and provide a definitive answer to it:

> To what extent can we use `R` to design a function that creates an alternative visualization for decision trees with one or two numeric predictors -- specifically, one that takes the statistical information typically used to build a conventional decision tree and instead maps the decision splits directly onto a predictor space?

To put it simply, the answer is: yes, we can use `R` to build the alternative visualization. The `alt_viz` function produced is a working proof of concept that `R` is not just capable of this task, but that it does it pretty well! By using the `path.rpart` function, we can extract and leverage the statistical information typically used to build classic regression decision trees with the `rpart`function. More specifically, we can use the sequence of decision rules for each leaf node, reorganize those rules into rectangular coordinate bounds, and generate a clean visual representation of each prediction region. The end result is a function that automatically maps the decision splits of a regression tree model onto a predictor space (or provides a data frame containing the coordinates of the rectangular regions that comprise the predictor space). 

In addition to demonstrating that such a function can be built using `R`, this project underscores the strengths of the alternative visualization that originally motivated the development of the `alt_viz` function. Unlike conventional decision tree diagrams, which -- especially when they are deep and wide -- can be abstract and confusing to trace, the alternative visualization is much more concrete. It shows us a two dimensional predictor space with prediction regions composed of rectangles whose bounds are determined by specific values of the predictors. This makes it straightforward to take any combination of two predictor values and immediately see the model’s prediction. Because of this, the alternative visualization (and, thus, the `alt_viz` function) is particularly helpful for statisticians or data analysts are interested in communicating simple regression tree results to audiences less familiar with statistics or, as we did in class, for educators trying to teach core ideas behind decision tree models. Furthermore, as we explored in this project, the alternative visualization allows us to juxtapose observed data and predictions in ways that we can’t with decision trees. For instance, we can plot observed data points from the original dataset directly onto the predictor space created by our alternative visualization to see how well the predictions match with the actual data. While the alternative visualization does have its limitations (including being restricted to models with at most two numeric predictors), these broader applications -- both in communication and statistical analysis -- highlight the utility of the `alt_viz` function.

Finally, on a personal note, I learned a lot from creating the `alt_viz` function (and also had fun just practicing my `R` coding skills). This project was, in many ways, an exercise in taking a complex problem (turning a visualization into code), breaking it down into its component parts, asking myself what information I needed, getting that information, and then using that information to build the final product. In particular, I’d say the most challenging part was figuring out how I would convert the statistical information in an `rpart` model that’s typically used to build the classic decision tree into a data frame that I could then use to build the alternative visualization. It was a tedious process and one that involved several days of following various (unsuccessful) leads. But eventually, after enough research online and with some ChatGPT, I discovered that the `path.rpart` function was my best entry point. After I figured this out, building the rest of the function was more straightforward.

I don’t intend for this to be the end of this project. At some point, perhaps when I get tired of reading cases and writing briefs at law school next year, I hope to return to this project and try to work on some of the “future directions” that I laid out in the previous section. I think it would be a great way to keep up my `R` coding skills. I’m excited for it!